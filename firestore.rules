rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has a specific role
    function isRole(uid, role) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role == role;
    }
    
    // Helper function to check if a user is an Admin
    function isAdmin(uid) {
      return isRole(uid, 'Admin');
    }

    // Users can read their own profile
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      // Only Admins can create or update user roles
      allow write: if isAdmin(request.auth.uid);
    }
    
    // Logged-in users can read most collections
    match /{document=**} {
       allow read: if request.auth != null;
    }
    
    // Writes are more restrictive
    // Allow writes to most collections if user is an Admin or Manager
    match /inventory/{productId} {
      allow write: if request.auth != null && (isAdmin(request.auth.uid) || isRole(request.auth.uid, 'Manager'));
    }
    
    match /clients/{clientId} {
       allow write: if request.auth != null;
    }
    
    match /suppliers/{supplierId} {
       allow write: if request.auth != null;
    }
    
    match /orders/{orderId} {
       allow write: if request.auth != null;
    }
    
    match /issuances/{issuanceId} {
       allow write: if request.auth != null;
    }
    
    match /purchaseOrders/{poId} {
       allow write: if request.auth != null;
    }
    
    match /shipments/{shipmentId} {
       allow write: if request.auth != null;
    }
    
    match /returns/{returnId} {
       allow write: if request.auth != null;
    }
    
    match /outboundReturns/{returnId} {
       allow write: if request.auth != null;
    }
    
    match /backorders/{backorderId} {
       allow write: if request.auth != null;
    }

    match /activities/{activityId} {
      allow write: if request.auth != null;
    }
    
    match /notifications/{notificationId} {
       allow write: if request.auth != null;
    }
  }
}